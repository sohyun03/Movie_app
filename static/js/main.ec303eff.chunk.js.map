{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movie","getMovies","a","axios","get","movies","data","setState","this","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRA+BeA,MA3Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKC,UAAU,QAAf,UACA,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACA,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACCD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAGX,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAE,KAA/C,gBCsCWC,G,kNA9CbC,MAAQ,CACNC,WAAY,EACZC,MAAM,I,EAGRC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGEC,EAHF,EAERC,KACEA,KAAQD,OAGZ,EAAKE,SAAS,CAACP,MAAOK,EAAQN,WAAW,IAN/B,2C,uDASZ,WACES,KAAKP,c,oBAEP,WACE,MAA6BO,KAAKV,MAA1BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MACnB,OACE,yBAASV,UAAU,YAAnB,SACCS,EACC,qBAAKT,UAAU,SAAf,SACA,sBAAMA,UAAU,eAAhB,0BAGA,qBAAKA,UAAU,SAAf,SACCU,EAAMP,KAAI,SAAAO,GAAK,OACd,cAAC,EAAD,CAEAS,GAAIT,EAAMS,GACVxB,KAAMe,EAAMf,KACZC,MAAOc,EAAMd,MACbC,QAASa,EAAMb,QACfC,OAAQY,EAAMU,mBACdrB,OAAQW,EAAMX,QANTW,EAAMS,e,GA9BHE,IAAMC,YCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ec303eff.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n    <img src={poster} alt={title} title={title} />\r\n    <div className=\"movie__data\">\r\n    <h3 className=\"movie__title\">{title}</h3>\r\n    <h5 className=\"movie__year\">{year}</h5>\r\n    <ul className=\"movie__genres\">\r\n    {genres.map((genre, index) => (\r\n      <li key={index} className=\"genres__genre\">{genre}</li>\r\n    ))}\r\n    </ul>\r\n    <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n\nclass App extends React.Component{\n  state = {\n    isLoading : true,\n    movie:[]\n  };\n\n  getMovies = async() =>{\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movie: movies, isLoading: false});\n  }\n  //처음에 render 하면 가장 먼저 호출되는 life cycle method\n  componentDidMount(){\n    this.getMovies();\n  }\n  render(){\n    const { isLoading, movie } = this.state;\n    return (\n      <section className=\"container\">\n      {isLoading ? (\n        <div className=\"loader\">\n        <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"movies\">\n        {movie.map(movie => (\n          <Movie\n          key={movie.id}\n          id={movie.id}\n          year={movie.year}\n          title={movie.title}\n          summary={movie.summary}\n          poster={movie.medium_cover_image}\n          genres={movie.genres}\n          />\n        ))}\n        </div>\n      )}\n      </section>\n      //위와 같이 object를 풀어줄 때 map함수를 사용하고, 또, jsx에서는 props를 통해서 값을 전달합니다. key는 표현되지 않지만 필수props입니다.\n    );\n  }\n}\n\nexport default App;\n\n// function Food({name,number,rating}) { //App함수에 Food에서 보낸것을 props라는 인자로 받음\n//   //props object 내부에는 fav가 있다. fav만 받고싶으면 {fav}로 쓴다. props를 {fav}로 대체가능\n//   return(\n//     <div>\n//     <h2>{name} 쪼아  값은{number}</h2>\n//     <h3>{rating}/5.0</h3>\n//     </div>\n//   );\n// }\n//\n// Food.propTypes ={\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.number.isRequired,\n//   rating: PropTypes.number.isRequired\n// };\n//\n// //react 안에 모든 elements은 유일한 키를 가지고 있어야 한다.\n// const foodLike=[\n//   {id: 1, name: \"Kimchi\", value:1, rating:5},\n//   {id: 2, name: \"Ramen\", value:2, rating:4.9},\n//   {id: 3, name: \"Ramen\", value:3, rating:4.8}\n// ];\n//\n// function App() {\n//   return (\n//     //<Food fav=\"Kimchi\"/> 이 뜻은 food component에 fav라는 이름의 property를 Kimchi라는 value로 줌\n//     <div className=\"App\">\n//\n//     {foodLike.map(dish => (\n//       <Food key={dish.id} name={dish.name} number={dish.value} rating={dish.rating}/>\n//     ))}\n//\n//     </div>\n//\n//   );\n// }\n\n\n\n\n\n// //직접 state를 변경하지 말고 state를 set해야함. 따라서 this.state.count =1 는 안됨(render를 refresh안함)\n// // setState를 호출하면 react는 state를 refresh하고 render function을 호출함.\n//\n// //onClick에서 this.add() 라고 한다면 즉시 실행이됨. ()없으면 클릭할때 실행\n// class App extends React.Component{\n//   state = {\n//     count :0\n//   };\n//   add=()=>{\n//     this.setState(current => ({ count: current.count + 1 }));\n//   };\n//   minus=()=>{\n//     this.setState({ count:-1 });\n//   };\n//   render(){\n//     return (\n//       <div>\n//         <h1>숫자는: {this.state.count}</h1>\n//         <button onClick={this.add}>Add</button>\n//         <button onClick={this.minus}>Minus</button>\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}